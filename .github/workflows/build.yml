name: Build

on: 
  push:
    branches:
      - master

jobs:
  
  buildTestRelease:

    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest, macos-latest ]
        include:
          - os: windows-latest
            zip: "myzipcmd ${{ env.MYVAR }}"
          - os: ubuntu-latest
            zip: "tar  ${{ env.MYVAR }}"
          - os: macos-latest
            zip: zip  ${{ env.MYVAR }}
      fail-fast: false

    runs-on: ${{ matrix.os }}
    
    env:
      PROJECT_NAME: 'action-release'

    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - name: Dump job context
      env:
        JOB_CONTEXT: ${{ toJson(job) }}
      run: echo "$JOB_CONTEXT"
    - name: Dump steps context
      env:
        STEPS_CONTEXT: ${{ toJson(steps) }}
      run: echo "$STEPS_CONTEXT"
    - name: Dump runner context
      env:
        RUNNER_CONTEXT: ${{ toJson(runner) }}
      run: echo "$RUNNER_CONTEXT"
    - name: Dump strategy context
      env:
        STRATEGY_CONTEXT: ${{ toJson(strategy) }}
      run: echo "$STRATEGY_CONTEXT"
    - name: Dump matrix context
      env:
        MATRIX_CONTEXT: ${{ toJson(matrix) }}
      run: echo "$MATRIX_CONTEXT"

    - uses: actions/checkout@v1
      name: Checkout

    - name: Setup Node.js (${{ matrix.node_version }})
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node_version }}

    - name: Version
      run: |
        echo "::set-env name=VERSION::$(npm run version --silent)"
        echo "::set-env name=MYVAR::HelloWorld"



    # - name: Changelog
    #   id: changelog
    #   run: |
    #     npm run changelog

    - name: Release
      uses: sondreb/action-release@master
      with:
        verbose: false
        token: ${{ secrets.GITHUB_TOKEN }}
        files: "action.js;README.md"
        draft: true
        prerelease: true
        body: 'A little test - some updated text!'
        #body: ${{outputs.changelog.}}
        name: "Draft Release (Release ${{env.VERSION}})"
        tag: v${{env.VERSION}}
